
# _parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C_LBRACE C_RBRACE DEF ELSE E_LBRACE E_RBRACE IF IFELSE INT I_LBRACE I_RBRACE MOVE M_LBRACE M_RBRACE NO_MARKER PATH_AHEAD PATH_LEFT PATH_RIGHT REPEAT RUN R_LBRACE R_RBRACE TURN_LEFT TURN_RIGHT WHILE W_LBRACE W_RBRACEprog : DEF RUN M_LBRACE stmt M_RBRACEstmt : while\n                | repeat\n                | stmt_stmt\n                | action\n                | if\n                | ifelse\n        stmt_stmt : stmt stmt\n        if : IF C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE\n        ifelse : IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE ELSE E_LBRACE stmt E_RBRACE\n        while : WHILE C_LBRACE NO_MARKER C_RBRACE W_LBRACE stmt W_RBRACE\n        repeat : REPEAT cste R_LBRACE stmt R_RBRACE\n        cond :  PATH_RIGHT\n                 | PATH_AHEAD \n                 | PATH_LEFT\n        action : MOVE \n                  | TURN_RIGHT\n                  | TURN_LEFT\n\n        cste : INT\n        '
    
_lr_action_items = {'DEF':([0,],[2,]),'$end':([1,20,],[0,-1,]),'RUN':([2,],[3,]),'M_LBRACE':([3,],[4,]),'WHILE':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[12,12,-2,-3,-4,-5,-6,-7,-16,-17,-18,12,12,12,12,-12,12,12,12,12,12,-11,-9,12,12,-10,]),'REPEAT':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[13,13,-2,-3,-4,-5,-6,-7,-16,-17,-18,13,13,13,13,-12,13,13,13,13,13,-11,-9,13,13,-10,]),'MOVE':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[14,14,-2,-3,-4,-5,-6,-7,-16,-17,-18,14,14,14,14,-12,14,14,14,14,14,-11,-9,14,14,-10,]),'TURN_RIGHT':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[15,15,-2,-3,-4,-5,-6,-7,-16,-17,-18,15,15,15,15,-12,15,15,15,15,15,-11,-9,15,15,-10,]),'TURN_LEFT':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[16,16,-2,-3,-4,-5,-6,-7,-16,-17,-18,16,16,16,16,-12,16,16,16,16,16,-11,-9,16,16,-10,]),'IF':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[17,17,-2,-3,-4,-5,-6,-7,-16,-17,-18,17,17,17,17,-12,17,17,17,17,17,-11,-9,17,17,-10,]),'IFELSE':([4,5,6,7,8,9,10,11,14,15,16,19,27,34,37,38,39,40,41,42,43,44,45,48,49,50,],[18,18,-2,-3,-4,-5,-6,-7,-16,-17,-18,18,18,18,18,-12,18,18,18,18,18,-11,-9,18,18,-10,]),'M_RBRACE':([5,6,7,8,9,10,11,14,15,16,19,38,44,45,50,],[20,-2,-3,-4,-5,-6,-7,-16,-17,-18,-8,-12,-11,-9,-10,]),'R_RBRACE':([6,7,8,9,10,11,14,15,16,19,34,38,44,45,50,],[-2,-3,-4,-5,-6,-7,-16,-17,-18,-8,38,-12,-11,-9,-10,]),'W_RBRACE':([6,7,8,9,10,11,14,15,16,19,38,41,44,45,50,],[-2,-3,-4,-5,-6,-7,-16,-17,-18,-8,-12,44,-11,-9,-10,]),'I_RBRACE':([6,7,8,9,10,11,14,15,16,19,38,42,43,44,45,50,],[-2,-3,-4,-5,-6,-7,-16,-17,-18,-8,-12,45,46,-11,-9,-10,]),'E_RBRACE':([6,7,8,9,10,11,14,15,16,19,38,44,45,49,50,],[-2,-3,-4,-5,-6,-7,-16,-17,-18,-8,-12,-11,-9,50,-10,]),'C_LBRACE':([12,17,18,],[21,24,25,]),'INT':([13,],[23,]),'NO_MARKER':([21,],[26,]),'R_LBRACE':([22,23,],[27,-19,]),'PATH_RIGHT':([24,25,],[29,29,]),'PATH_AHEAD':([24,25,],[30,30,]),'PATH_LEFT':([24,25,],[31,31,]),'C_RBRACE':([26,28,29,30,31,32,],[33,35,-13,-14,-15,36,]),'W_LBRACE':([33,],[37,]),'I_LBRACE':([35,36,],[39,40,]),'ELSE':([46,],[47,]),'E_LBRACE':([47,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'stmt':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[5,19,19,34,19,41,42,43,19,19,19,49,19,]),'while':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'repeat':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'stmt_stmt':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'action':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'if':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ifelse':([4,5,19,27,34,37,39,40,41,42,43,48,49,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'cste':([13,],[22,]),'cond':([24,25,],[28,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> DEF RUN M_LBRACE stmt M_RBRACE','prog',5,'p_prog','parser.py',120),
  ('stmt -> while','stmt',1,'p_stmt','parser.py',125),
  ('stmt -> repeat','stmt',1,'p_stmt','parser.py',126),
  ('stmt -> stmt_stmt','stmt',1,'p_stmt','parser.py',127),
  ('stmt -> action','stmt',1,'p_stmt','parser.py',128),
  ('stmt -> if','stmt',1,'p_stmt','parser.py',129),
  ('stmt -> ifelse','stmt',1,'p_stmt','parser.py',130),
  ('stmt_stmt -> stmt stmt','stmt_stmt',2,'p_stmt_stmt','parser.py',136),
  ('if -> IF C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE','if',7,'p_if','parser.py',144),
  ('ifelse -> IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE ELSE E_LBRACE stmt E_RBRACE','ifelse',11,'p_ifelse','parser.py',171),
  ('while -> WHILE C_LBRACE NO_MARKER C_RBRACE W_LBRACE stmt W_RBRACE','while',7,'p_while','parser.py',198),
  ('repeat -> REPEAT cste R_LBRACE stmt R_RBRACE','repeat',5,'p_repeat','parser.py',226),
  ('cond -> PATH_RIGHT','cond',1,'p_cond','parser.py',245),
  ('cond -> PATH_AHEAD','cond',1,'p_cond','parser.py',246),
  ('cond -> PATH_LEFT','cond',1,'p_cond','parser.py',247),
  ('action -> MOVE','action',1,'p_action','parser.py',254),
  ('action -> TURN_RIGHT','action',1,'p_action','parser.py',255),
  ('action -> TURN_LEFT','action',1,'p_action','parser.py',256),
  ('cste -> INT','cste',1,'p_cste','parser.py',278),
]
